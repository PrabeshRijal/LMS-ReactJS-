{"ast":null,"code":"var _jsxFileName = \"D:\\\\node.js\\\\librarymanagement\\\\mern-stack-reactjs\\\\src\\\\components\\\\PostMessages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/postMessage\";\nimport { Grid, Paper, withStyles, List, ListItem, ListItemText, Typography, Divider, Button } from \"@material-ui/core\";\nimport PostMessageForm from \"./PostMessageForm\";\nimport ButterToast, { Cinnamon } from \"butter-toast\";\nimport { DeleteSweep } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(3),\n    padding: theme.spacing(2)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst PostMessages = ({\n  classes,\n  ...props\n}) => {\n  _s();\n\n  //const {classes, ...props} = props\n  const [currentId, setCurrentId] = useState(0);\n  useEffect(() => {\n    props.fetchAllPostMessages();\n  }, []); //DidMount\n\n  const onDelete = id => {\n    const onSuccess = () => {\n      ButterToast.raise({\n        content: /*#__PURE__*/_jsxDEV(Cinnamon.Crisp, {\n          title: \"Post Box\",\n          content: \"Deleted successfully\",\n          scheme: Cinnamon.Crisp.SCHEME_PURPLE,\n          icon: /*#__PURE__*/_jsxDEV(DeleteSweep, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 26\n        }, this)\n      });\n    };\n\n    if (window.confirm('Are you sure to delete this record?')) props.deletePostMessage(id, onSuccess);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 5,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(PostMessageForm, {\n          currentId,\n          setCurrentId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 7,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: props.postMessageList.map((record, index) => {\n            return /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h5\",\n                    children: record.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: record.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.actionDiv,\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"contained\",\n                      color: \"primary\",\n                      size: \"small\",\n                      className: classes.smMargin,\n                      onClick: () => setCurrentId(record._id),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"contained\",\n                      color: \"secondary\",\n                      size: \"small\",\n                      className: classes.smMargin,\n                      onClick: () => onDelete(record._id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 73,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                component: \"li\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 41\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostMessages, \"qtMA8Ys3jjss/LPHNy//l+Q+ALA=\");\n\n_c = PostMessages;\n\nconst mapStateToProps = state => ({\n  postMessageList: state.postMessage.list\n});\n\nconst mapActionToProps = {\n  fetchAllPostMessages: actions.fetchAll,\n  deletePostMessage: actions.Delete\n};\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(PostMessages));\n\nvar _c;\n\n$RefreshReg$(_c, \"PostMessages\");","map":{"version":3,"sources":["D:/node.js/librarymanagement/mern-stack-reactjs/src/components/PostMessages.js"],"names":["React","useEffect","useState","Fragment","connect","actions","Grid","Paper","withStyles","List","ListItem","ListItemText","Typography","Divider","Button","PostMessageForm","ButterToast","Cinnamon","DeleteSweep","styles","theme","paper","margin","spacing","padding","smMargin","actionDiv","textAlign","PostMessages","classes","props","currentId","setCurrentId","fetchAllPostMessages","onDelete","id","onSuccess","raise","content","Crisp","SCHEME_PURPLE","window","confirm","deletePostMessage","postMessageList","map","record","index","title","message","_id","mapStateToProps","state","postMessage","list","mapActionToProps","fetchAll","Delete"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,UAAtB,EAAkCC,IAAlC,EAAwCC,QAAxC,EAAkDC,YAAlD,EAAgEC,UAAhE,EAA4EC,OAA5E,EAAqFC,MAArF,QAAmG,mBAAnG;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,WAAP,IAAsBC,QAAtB,QAAsC,cAAtC;AACA,SAASC,WAAT,QAA4B,oBAA5B;;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACrBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADL;AAEHC,IAAAA,OAAO,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd;AAFN,GADc;AAKrBE,EAAAA,QAAQ,EAAE;AACNH,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADF,GALW;AAQrBG,EAAAA,SAAS,EAAE;AACPC,IAAAA,SAAS,EAAE;AADJ;AARU,CAAL,CAApB;;AAaA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAW,KAAGC;AAAd,CAAD,KAA2B;AAAA;;AAC5C;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4B9B,QAAQ,CAAC,CAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ6B,IAAAA,KAAK,CAACG,oBAAN;AACH,GAFQ,EAEN,EAFM,CAAT,CAJ4C,CAMtC;;AAEN,QAAMC,QAAQ,GAAGC,EAAE,IAAI;AACnB,UAAMC,SAAS,GAAG,MAAM;AACpBpB,MAAAA,WAAW,CAACqB,KAAZ,CAAkB;AACdC,QAAAA,OAAO,eAAE,QAAC,QAAD,CAAU,KAAV;AAAgB,UAAA,KAAK,EAAC,UAAtB;AACL,UAAA,OAAO,EAAC,sBADH;AAEL,UAAA,MAAM,EAAErB,QAAQ,CAACsB,KAAT,CAAeC,aAFlB;AAGL,UAAA,IAAI,eAAE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAHD;AAAA;AAAA;AAAA;AAAA;AADK,OAAlB;AAOH,KARD;;AASA,QAAIC,MAAM,CAACC,OAAP,CAAe,qCAAf,CAAJ,EACIZ,KAAK,CAACa,iBAAN,CAAwBR,EAAxB,EAA2BC,SAA3B;AACP,GAZD;;AAeA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,SAAS,EAAEP,OAAO,CAACR,KAA1B;AAAA,+BACI,QAAC,eAAD;AAAuBU,UAAAA,SAAvB;AAAkCC,UAAAA;AAAlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,SAAS,EAAEH,OAAO,CAACR,KAA1B;AAAA,+BACI,QAAC,IAAD;AAAA,oBAEQS,KAAK,CAACc,eAAN,CAAsBC,GAAtB,CAA0B,CAACC,MAAD,EAASC,KAAT,KAAmB;AACzC,gCACI,QAAC,QAAD;AAAA,sCACI,QAAC,QAAD;AAAA,uCACI,QAAC,YAAD;AAAA,0CACI,QAAC,UAAD;AAAY,oBAAA,OAAO,EAAC,IAApB;AAAA,8BACKD,MAAM,CAACE;AADZ;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII;AAAA,8BACKF,MAAM,CAACG;AADZ;AAAA;AAAA;AAAA;AAAA,0BAJJ,eAOI;AAAK,oBAAA,SAAS,EAAEpB,OAAO,CAACH,SAAxB;AAAA,4CACI,QAAC,MAAD;AAAQ,sBAAA,OAAO,EAAC,WAAhB;AAA4B,sBAAA,KAAK,EAAC,SAAlC;AAA4C,sBAAA,IAAI,EAAC,OAAjD;AACI,sBAAA,SAAS,EAAEG,OAAO,CAACJ,QADvB;AAEI,sBAAA,OAAO,EAAE,MAAMO,YAAY,CAACc,MAAM,CAACI,GAAR,CAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAMI,QAAC,MAAD;AAAQ,sBAAA,OAAO,EAAC,WAAhB;AAA4B,sBAAA,KAAK,EAAC,WAAlC;AAA8C,sBAAA,IAAI,EAAC,OAAnD;AACI,sBAAA,SAAS,EAAErB,OAAO,CAACJ,QADvB;AAEI,sBAAA,OAAO,EAAE,MAAMS,QAAQ,CAACY,MAAM,CAACI,GAAR,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BANJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAuBI,QAAC,OAAD;AAAS,gBAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,sBAvBJ;AAAA,eAAeH,KAAf;AAAA;AAAA;AAAA;AAAA,oBADJ;AA2BH,WA5BD;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8CH,CArED;;GAAMnB,Y;;KAAAA,Y;;AAuEN,MAAMuB,eAAe,GAAGC,KAAK,KAAK;AAC9BR,EAAAA,eAAe,EAAEQ,KAAK,CAACC,WAAN,CAAkBC;AADL,CAAL,CAA7B;;AAIA,MAAMC,gBAAgB,GAAG;AACrBtB,EAAAA,oBAAoB,EAAE5B,OAAO,CAACmD,QADT;AAErBb,EAAAA,iBAAiB,EAAEtC,OAAO,CAACoD;AAFN,CAAzB;AAKA,eAAerD,OAAO,CAAC+C,eAAD,EAAkBI,gBAAlB,CAAP,CAA2C/C,UAAU,CAACW,MAAD,CAAV,CAAmBS,YAAnB,CAA3C,CAAf","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/postMessage\";\nimport { Grid, Paper, withStyles, List, ListItem, ListItemText, Typography, Divider, Button } from \"@material-ui/core\";\nimport PostMessageForm from \"./PostMessageForm\";\nimport ButterToast, { Cinnamon } from \"butter-toast\";\nimport { DeleteSweep } from \"@material-ui/icons\";\n\nconst styles = theme => ({\n    paper: {\n        margin: theme.spacing(3),\n        padding: theme.spacing(2)\n    },\n    smMargin: {\n        margin: theme.spacing(1)\n    },\n    actionDiv: {\n        textAlign: \"center\"\n    }\n})\n\nconst PostMessages = ({ classes, ...props }) => {\n    //const {classes, ...props} = props\n    const [currentId, setCurrentId] = useState(0)\n\n    useEffect(() => {\n        props.fetchAllPostMessages()\n    }, [])//DidMount\n\n    const onDelete = id => {\n        const onSuccess = () => {\n            ButterToast.raise({\n                content: <Cinnamon.Crisp title=\"Post Box\"\n                    content=\"Deleted successfully\"\n                    scheme={Cinnamon.Crisp.SCHEME_PURPLE}\n                    icon={<DeleteSweep />}\n                />\n            })\n        }\n        if (window.confirm('Are you sure to delete this record?'))\n            props.deletePostMessage(id,onSuccess)\n    }\n\n\n    return (\n        <Grid container>\n            <Grid item xs={5}>\n                <Paper className={classes.paper}>\n                    <PostMessageForm {...{ currentId, setCurrentId }} />\n                </Paper>\n            </Grid>\n            <Grid item xs={7}>\n                <Paper className={classes.paper}>\n                    <List>\n                        {\n                            props.postMessageList.map((record, index) => {\n                                return (\n                                    <Fragment key={index}>\n                                        <ListItem>\n                                            <ListItemText>\n                                                <Typography variant=\"h5\">\n                                                    {record.title}\n                                                </Typography>\n                                                <div>\n                                                    {record.message}\n                                                </div>\n                                                <div className={classes.actionDiv}>\n                                                    <Button variant=\"contained\" color=\"primary\" size=\"small\"\n                                                        className={classes.smMargin}\n                                                        onClick={() => setCurrentId(record._id)}>\n                                                        Edit\n                                                    </Button>\n                                                    <Button variant=\"contained\" color=\"secondary\" size=\"small\"\n                                                        className={classes.smMargin}\n                                                        onClick={() => onDelete(record._id)}>\n                                                        Delete\n                                                    </Button>\n                                                </div>\n                                            </ListItemText>\n                                        </ListItem>\n                                        <Divider component=\"li\" />\n                                    </Fragment>\n                                )\n                            })\n                        }\n                    </List>\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n}\n\nconst mapStateToProps = state => ({\n    postMessageList: state.postMessage.list\n})\n\nconst mapActionToProps = {\n    fetchAllPostMessages: actions.fetchAll,\n    deletePostMessage: actions.Delete\n}\n\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(PostMessages));\n"]},"metadata":{},"sourceType":"module"}